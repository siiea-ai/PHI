name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Install package (editable)
        run: |
          python -m pip install -e .

      - name: CLI smoke test (wizard help)
        run: |
          python -m phi.cli llm --help
          python -m phi.cli llm wizard --help

      - name: CLI smoke test (neuro)
        env:
          MPLBACKEND: Agg
        run: |
          python -m phi.cli neuro bci-sim --steps 30 --fs 128 --window-sec 0.5 --scheduler cosine_phi --out-dir out/bci_ci

      - name: CLI smoke test (fractal neuro quick)
        env:
          MPLBACKEND: Agg
        run: |
          OUT=out/ci_neuro
          mkdir -p "$OUT"
          python -m phi.cli fractal neuro generate --output "$OUT/full.json" --nodes 16 --model ws --ws-k 4 --ws-p 0.1 --seed 5 --state-init random
          python -m phi.cli fractal neuro compress --input "$OUT/full.json" --model "$OUT/model.json" --ratio 4 --method interp
          python -m phi.cli fractal neuro expand --model "$OUT/model.json" --output "$OUT/recon.json" --nodes 16 --method interp --seed 7
          python -m phi.cli fractal neuro simulate --model "$OUT/recon.json" --output "$OUT/traj.csv" --steps 5 --dt 0.1 --leak 0.1 --input-drive 0.05 --noise-std 0.0 --seed 42
          python -m phi.cli fractal neuro analyze --a "$OUT/full.json" --b "$OUT/recon.json" --output "$OUT/metrics.csv"

      - name: Run tests
        env:
          MPLBACKEND: Agg
        run: |
          pytest -q
